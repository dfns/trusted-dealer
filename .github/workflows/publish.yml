on:
  push:
    tags:
      - 'key-import/v*'
      - 'key-export/v*'
  workflow_dispatch:

name: Publish

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  publish-import:
    name: Build and Publish NPM package
    environment: npmjs.com
    runs-on: ubuntu-latest
    if: >-
      github.ref_type == 'tag'
      && startsWith(github.ref_name, 'key-import/v')
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Install wasm32-unknown-unknown toolchain
      run: rustup target add wasm32-unknown-unknown
    - name: Install wasm-pack
      uses: baptiste0928/cargo-install@v1
      with:
        crate: wasm-pack
    - name: wasm-pack build
      run: wasm-pack build --target nodejs --scope dfns key-import

    - uses: actions/setup-node@v4
      with:
        node-version: latest
        registry-url: https://registry.npmjs.org
    - name: Publish NPM package
      run: npm publish ./key-import/pkg --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

  publish-export:
    name: Build and Publish NPM package
    environment: npmjs.com
    runs-on: ubuntu-latest
    if: >-
      github.ref_type == 'tag'
      && startsWith(github.ref_name, 'key-export/v')
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Install wasm32-unknown-unknown toolchain
      run: rustup target add wasm32-unknown-unknown
    - name: Install wasm-pack
      uses: baptiste0928/cargo-install@v1
      with:
        crate: wasm-pack
    - name: wasm-pack build
      run: wasm-pack build --target nodejs --scope dfns key-export

    - uses: actions/setup-node@v4
      with:
        node-version: latest
        registry-url: https://registry.npmjs.org
    - name: Publish NPM package
      run: npm publish ./key-export/pkg --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
